{
  "db_name": "PostgreSQL",
  "query": "WITH chain_parameter AS (\n                 SELECT\n                      id,\n                      (EXTRACT('epoch' from '1 year'::INTERVAL) * 1000)\n                          / (epoch_duration * reward_period_length)\n                          AS paydays_per_year\n                 FROM current_chain_parameters\n                 WHERE id = true\n             ) SELECT\n                 EXP(AVG(LN(POWER(\n                     (payday_total_transaction_rewards\n                         + payday_total_baking_rewards\n                         + payday_total_finalization_rewards) / (baker_stake + delegators_stake),\n                     chain_parameter.paydays_per_year\n                 ))))::FLOAT8 AS total_apy,\n\n                 EXP(AVG(LN(POWER(\n                     (payday_delegators_transaction_rewards\n                         + payday_delegators_baking_rewards\n                         + payday_delegators_finalization_rewards) / delegators_stake,\n                     chain_parameter.paydays_per_year\n                 ))))::FLOAT8 AS delegators_apy,\n\n                 EXP(AVG(LN(POWER(\n                     (payday_total_transaction_rewards - payday_delegators_transaction_rewards\n                       + payday_total_baking_rewards - payday_delegators_baking_rewards\n                       + payday_total_finalization_rewards - payday_delegators_finalization_rewards)\n                             / baker_stake,\n                     chain_parameter.paydays_per_year\n                 ))))::FLOAT8 AS baker_apy\n             FROM payday_baker_pool_stakes\n             JOIN blocks ON blocks.height = payday_baker_pool_stakes.payday_block\n             JOIN bakers_payday_pool_rewards\n                 ON blocks.height = bakers_payday_pool_rewards.payday_block_height\n                 AND pool_owner_for_primary_key = $1\n             JOIN chain_parameter ON chain_parameter.id = true\n             WHERE\n                 payday_baker_pool_stakes.baker = $1\n                 AND blocks.slot_time > NOW() - $2::INTERVAL",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "total_apy",
        "type_info": "Float8"
      },
      {
        "ordinal": 1,
        "name": "delegators_apy",
        "type_info": "Float8"
      },
      {
        "ordinal": 2,
        "name": "baker_apy",
        "type_info": "Float8"
      }
    ],
    "parameters": {
      "Left": [
        "Int8",
        "Interval"
      ]
    },
    "nullable": [
      null,
      null,
      null
    ]
  },
  "hash": "11ebad93f51d5269f18166484242c5601b29df25710ce8da417713ad2629041d"
}
