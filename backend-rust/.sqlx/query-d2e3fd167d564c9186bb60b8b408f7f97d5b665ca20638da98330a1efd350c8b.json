{
  "db_name": "PostgreSQL",
  "query": "SELECT\n    bucket_time.bucket_start as bucket_time,\n    after_bucket.total_bakers_added - before_bucket.total_bakers_added as bucket_bakers_added,\n    after_bucket.total_bakers_removed - before_bucket.total_bakers_removed as bucket_bakers_removed\nFROM\n    date_bin_series(\n        $3::interval,\n        $2,\n        $1\n    ) AS bucket_time\nLEFT JOIN LATERAL (\n    SELECT\n        COALESCE(metrics_bakers.total_bakers_added, 0) as total_bakers_added,\n        COALESCE(metrics_bakers.total_bakers_removed, 0) as total_bakers_removed\n    FROM metrics_bakers\n    LEFT JOIN blocks ON metrics_bakers.block_height = blocks.height\n    WHERE slot_time <= bucket_time.bucket_start\n    ORDER BY slot_time DESC\n    LIMIT 1\n) before_bucket ON true\nLEFT JOIN LATERAL (\n    SELECT\n        COALESCE(metrics_bakers.total_bakers_added, 0) as total_bakers_added,\n        COALESCE(metrics_bakers.total_bakers_removed, 0) as total_bakers_removed\n    FROM metrics_bakers\n    LEFT JOIN blocks ON metrics_bakers.block_height = blocks.height\n    WHERE slot_time < bucket_time.bucket_end\n    ORDER BY slot_time DESC\n    LIMIT 1\n) after_bucket ON true\n",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "bucket_time",
        "type_info": "Timestamptz"
      },
      {
        "ordinal": 1,
        "name": "bucket_bakers_added",
        "type_info": "Int8"
      },
      {
        "ordinal": 2,
        "name": "bucket_bakers_removed",
        "type_info": "Int8"
      }
    ],
    "parameters": {
      "Left": [
        "Timestamptz",
        "Timestamptz",
        "Interval"
      ]
    },
    "nullable": [
      null,
      null,
      null
    ]
  },
  "hash": "d2e3fd167d564c9186bb60b8b408f7f97d5b665ca20638da98330a1efd350c8b"
}
