{
  "db_name": "PostgreSQL",
  "query": "\nSELECT * FROM (SELECT\n    bakers.id AS id,\n    staked,\n    restake_earnings,\n    open_status as \"open_status: BakerPoolOpenStatus\",\n    metadata_url,\n    transaction_commission,\n    baking_commission,\n    finalization_commission,\n    payday_transaction_commission as \"payday_transaction_commission?\",\n    payday_baking_commission as \"payday_baking_commission?\",\n    payday_finalization_commission as \"payday_finalization_commission?\",\n    payday_lottery_power as \"payday_lottery_power?\",\n    payday_ranking_by_lottery_powers as \"payday_ranking_by_lottery_powers?\",\n    (SELECT MAX(payday_ranking_by_lottery_powers) FROM bakers_payday_lottery_powers)\n        AS \"payday_total_ranking_by_lottery_powers?\",\n    pool_total_staked,\n    pool_delegator_count,\n    self_suspended,\n    inactive_suspended,\n    primed_for_suspension,\n    baker_apy AS \"baker_apy?\",\n    delegators_apy AS \"delegators_apy?\"\nFROM bakers\n    LEFT JOIN latest_baker_apy_30_days ON latest_baker_apy_30_days.id = bakers.id\n    LEFT JOIN bakers_payday_lottery_powers ON bakers_payday_lottery_powers.id = bakers.id\n    LEFT JOIN bakers_payday_commission_rates ON bakers_payday_commission_rates.id = bakers.id\nWHERE\n    (\n      -- Start outer bound for page\n      (COALESCE(baker_apy, 0) < $1::FLOAT8\n      -- End outer bound for page\n      AND COALESCE(baker_apy, 0) > $2::FLOAT8)\n      -- When outer bounds are not equal, filter separate for each inner bound.\n      OR (\n          $1 != $2\n          AND (\n               -- Start inner bound for page.\n               (COALESCE(baker_apy, 0) = $1 AND bakers.id < $3)\n               -- End inner bound for page.\n                OR (COALESCE(baker_apy, 0) = $2 AND bakers.id > $4)\n          )\n      )\n      -- When outer bounds are equal, use one filter for both bounds.\n      OR (\n          $1 = $2\n          AND (COALESCE(baker_apy, 0) = $1\n          AND bakers.id < $3 AND bakers.id > $4))\n    )\n    -- filter if provided\n    AND ($7::pool_open_status IS NULL OR open_status = $7::pool_open_status)\nORDER BY\n    (CASE WHEN $5     THEN baker_apy END) ASC NULLS FIRST,\n    (CASE WHEN $5     THEN bakers.id END) ASC,\n    (CASE WHEN NOT $5 THEN baker_apy END) DESC NULLS LAST,\n    (CASE WHEN NOT $5 THEN bakers.id END) DESC\nLIMIT $6\n) ORDER BY \"baker_apy?\" DESC NULLS LAST, id DESC",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "id",
        "type_info": "Int8"
      },
      {
        "ordinal": 1,
        "name": "staked",
        "type_info": "Int8"
      },
      {
        "ordinal": 2,
        "name": "restake_earnings",
        "type_info": "Bool"
      },
      {
        "ordinal": 3,
        "name": "open_status: BakerPoolOpenStatus",
        "type_info": {
          "Custom": {
            "name": "pool_open_status",
            "kind": {
              "Enum": [
                "OpenForAll",
                "ClosedForNew",
                "ClosedForAll"
              ]
            }
          }
        }
      },
      {
        "ordinal": 4,
        "name": "metadata_url",
        "type_info": "Varchar"
      },
      {
        "ordinal": 5,
        "name": "transaction_commission",
        "type_info": "Int8"
      },
      {
        "ordinal": 6,
        "name": "baking_commission",
        "type_info": "Int8"
      },
      {
        "ordinal": 7,
        "name": "finalization_commission",
        "type_info": "Int8"
      },
      {
        "ordinal": 8,
        "name": "payday_transaction_commission?",
        "type_info": "Int8"
      },
      {
        "ordinal": 9,
        "name": "payday_baking_commission?",
        "type_info": "Int8"
      },
      {
        "ordinal": 10,
        "name": "payday_finalization_commission?",
        "type_info": "Int8"
      },
      {
        "ordinal": 11,
        "name": "payday_lottery_power?",
        "type_info": "Numeric"
      },
      {
        "ordinal": 12,
        "name": "payday_ranking_by_lottery_powers?",
        "type_info": "Int8"
      },
      {
        "ordinal": 13,
        "name": "payday_total_ranking_by_lottery_powers?",
        "type_info": "Int8"
      },
      {
        "ordinal": 14,
        "name": "pool_total_staked",
        "type_info": "Int8"
      },
      {
        "ordinal": 15,
        "name": "pool_delegator_count",
        "type_info": "Int8"
      },
      {
        "ordinal": 16,
        "name": "self_suspended",
        "type_info": "Int8"
      },
      {
        "ordinal": 17,
        "name": "inactive_suspended",
        "type_info": "Int8"
      },
      {
        "ordinal": 18,
        "name": "primed_for_suspension",
        "type_info": "Int8"
      },
      {
        "ordinal": 19,
        "name": "baker_apy?",
        "type_info": "Float8"
      },
      {
        "ordinal": 20,
        "name": "delegators_apy?",
        "type_info": "Float8"
      }
    ],
    "parameters": {
      "Left": [
        "Float8",
        "Float8",
        "Int8",
        "Int8",
        "Bool",
        "Int8",
        {
          "Custom": {
            "name": "pool_open_status",
            "kind": {
              "Enum": [
                "OpenForAll",
                "ClosedForNew",
                "ClosedForAll"
              ]
            }
          }
        }
      ]
    },
    "nullable": [
      false,
      false,
      false,
      true,
      true,
      true,
      true,
      true,
      false,
      false,
      false,
      false,
      false,
      null,
      false,
      false,
      true,
      true,
      true,
      true,
      true
    ]
  },
  "hash": "939b112bb284e9c915fdb23f7ee659689df721a3d235a296a6c5291d7620eb9e"
}
