{
  "db_name": "PostgreSQL",
  "query": "-- Counts transactions in buckets by counting the cumulative total number of\n-- transactions at or before (i.e. <=) the start of the bucket and the same number just\n-- before (i.e. <) the next bucket. The difference between the two numbers should\n-- give the total number of transactions within the bucket.\nSELECT\n    -- The bucket time is the starting time of the bucket.\n    bucket_time.bucket_start as \"bucket_time!\",\n    -- Number of transactions at or before the bucket.\n    COALESCE(before_bucket.cumulative_num_txs, 0) as \"start_cumulative_num_txs!\",\n    -- Number of transactions at the end of the bucket.\n    COALESCE(after_bucket.cumulative_num_txs, 0) as \"end_cumulative_num_txs!\"\nFROM\n    -- We generate a time series of all the buckets where transactions will be counted.\n    -- For the rest of the comments, let's go with the example of a full period of 7 days with 6 hour buckets.\n    date_bin_series(\n        -- Size of the buckets.\n        $2::interval,\n        -- The first bucket should cover 7 days ago.\n        now() - $1::interval,\n        -- The final bucket should cover now.\n        now()\n    ) AS bucket_time\nLEFT JOIN LATERAL (\n    -- Selects the cumulative number of transactions at or before the start of the bucket.\n    SELECT cumulative_num_txs\n    FROM blocks\n    WHERE slot_time < bucket_time.bucket_start\n    ORDER BY slot_time DESC\n    LIMIT 1\n) before_bucket ON true\nLEFT JOIN LATERAL (\n    -- Selects the cumulative number of transactions at the end of the bucket.\n    SELECT cumulative_num_txs\n    FROM blocks\n    WHERE slot_time < bucket_time.bucket_end\n    ORDER BY slot_time DESC\n    LIMIT 1\n) after_bucket ON true\n",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "bucket_time!",
        "type_info": "Timestamptz"
      },
      {
        "ordinal": 1,
        "name": "start_cumulative_num_txs!",
        "type_info": "Int8"
      },
      {
        "ordinal": 2,
        "name": "end_cumulative_num_txs!",
        "type_info": "Int8"
      }
    ],
    "parameters": {
      "Left": [
        "Interval",
        "Interval"
      ]
    },
    "nullable": [
      null,
      null,
      null
    ]
  },
  "hash": "3e6a1da49a802d081e6ae3eb447b73774e85293d328899291432581b336a8314"
}
