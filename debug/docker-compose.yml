version: '3.4'

services:
  frontend:
    user: root
    image: node:16
    ports:
      - 3000:3000
    restart: on-failure
    environment:
      BACKEND_API_URL: http://localhost:5000/graphql
      BACKEND_WS_URL: ws://localhost:5000/graphql
    volumes:
      - ../frontend:/src:rw
    depends_on:
      - backend
    working_dir: /src
    entrypoint:
      - sleep
      - infinity
  backend:
    user: root
    build:
      context: ../backend
      dockerfile: debug.Dockerfile
    ports:
      - 5000:5000
    restart: on-failure
    environment:
      ASPNETCORE_URLS: http://+:5000
      ASPNETCORE_ENVIRONMENT: Development
      PostgresDatabase__ConnectionString: Host=timescale; Port=${POSTGRES_PORT}; Database=ccscan; User ID=postgres; Password=${POSTGRES_PASSWORD}; Include Error Detail=true;
      PostgresDatabase__ConnectionStringNodeCache: Host=timescale; Port=${POSTGRES_PORT}; Database=ccscan; User ID=postgres; Password=${POSTGRES_PASSWORD}; Include Error Detail=true;
      FeatureFlags__MigrateDatabasesAtStartup: "true"
      ConcordiumNodeGrpc__Address: http://node:${CONCORDIUM_NODE_PORT}
      ConcordiumNodeGrpc__AuthenticationToken: rpcadmin
    volumes:
      - ~/.vsdbg:/remote_debugger:rw
      - ../backend:/src:rw
    depends_on:
      - node
      - timescale
  node:
    image: concordium/testnet-node:4.2.1-2
    # build: ./docker/concordium-node
    ports:
      - ${CONCORDIUM_NODE_PORT}:${CONCORDIUM_NODE_PORT}
    working_dir: /
    environment:
      ## Refer https://github.com/Concordium/concordium-node/blob/main/VARIABLES.md#grpc
      CONCORDIUM_NODE_RPC_SERVER_ADDR: 0.0.0.0
      CONCORDIUM_NODE_RPC_SERVER_PORT: ${CONCORDIUM_NODE_PORT}
      CONCORDIUM_NODE_LISTEN_ADDRESS: 0.0.0.0
      CONCORDIUM_NODE_CONSENSUS_GENESIS_DATA_FILE: /testnet-genesis.dat
      CONCORDIUM_NODE_CONFIG_DIR: "/tmp/concordium-node-config"
      CONCORDIUM_NODE_DATA_DIR: "/tmp/concordium-node-data"
      CONCORDIUM_NODE_CONNECTION_BOOTSTRAP_NODES: bootstrap.testnet.concordium.com:8888
    volumes:
      - ./tmp/concordium-node-data:/tmp/concordium-node-data
      - ./tmp/concordium-node-config:/tmp/concordium-node-config
    entrypoint:
      - ./concordium-node
  timescale:
    image: timescale/timescaledb:latest-pg14
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data
    volumes:
      - ./tmp/postgres:/var/lib/postgresql/data
