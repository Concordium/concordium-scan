# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - main

resources:
  - repo: self

variables:
  # Agent VM image name
  vmImageName: "windows-latest"

stages:
  - stage: BuildFrontend
    displayName: Build Frontend
    jobs:
      - job: Build
        displayName: build frontend
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "16.x"
            displayName: "Install Node.js"
          - task: CmdLine@2
            inputs:
              script: |
                cd frontend
                yarn install
                yarn run build
            displayName: "Install dependencies and build .output"
            condition:
          - task: CopyFiles@2
            inputs:
              SourceFolder: "$(Build.SourcesDirectory)/frontend"
              Contents: "firebase.json"
              TargetFolder: "$(Build.SourcesDirectory)/frontend/.output"
          - task: PublishBuildArtifacts@1
            displayName: "Publish frontend app build artifact"
            inputs:
              PathtoPublish: "$(Build.SourcesDirectory)/frontend/.output"
              ArtifactName: "files_frontend"
              publishLocation: "Container"
  
  - stage: BuildBackend
    displayName: Build Backend
    dependsOn: []
    jobs:
      - job: Build
        displayName: Build
        steps:
          - task: Docker@2
            displayName: 'Build image'
            inputs:
              repository: 'ccscan-backend' 
              command: 'build'
              Dockerfile: '$(Build.SourcesDirectory)/backend/Dockerfile'
              tags: $(Build.BuildNumber)
          - task: Docker@2
            displayName: 'Save image to TAR'
            inputs:
              repository: 'ccscan-backend' 
              command: save
              arguments: '--output $(build.artifactstagingdirectory)/ccscan-backend.image.tar ccscan-backend:$(Build.BuildNumber)'
              addPipelineData: false
          - task: PublishPipelineArtifact@1
            displayName: 'Publish image as build artifact'
            inputs:
              path: $(build.artifactstagingdirectory)/ccscan-backend.image.tar
              artifact: BackendContainerImage              
